class Node
{
 int val;
 Node left,right;
 public Node(int item)
  {
     val=item;
     left=right=null;
  }
}

class Binary
{
   Node root;
   Binary()
   {
     root=null;
   }


     void inorder(Node node)
    {
     if(node==null)
      {
        return ;
      }
      inorder(node.left);
      System.out.println(node.val + " ");
      inorder(node.right);
      
     }

     void preorder(Node node)
     {
     if(node==null)
      {
        return ;
      }
      System.out.println(node.val + " ");
      preorder(node.left);
      preorder(node.right);
      
     }

     void postorder(Node node)
   {
     if(node==null)
      {
        return ;
      }
      postorder(node.left);
      postorder(node.right);
      System.out.println(node.val + " ");
     }
   

     void inorder()
     {
       inorder(root);
     }

     void preorder()
     {
       preorder(root);
     }

       void postorder()
     {
       postorder(root);
     }



}


public class Main
  {
    public static void main(String[] args)
    {
     Binary tree = new Binary();
     tree.root = new Node(7);
     tree.root.left = new Node(6);
     tree.root.right = new Node(9);
     tree.root.left.left = new Node(3);
     tree.root.left.right = new Node(4);
     
     System.out.println(
            "Preorder traversal of binary tree is ");
        tree.preorder();
 
        System.out.println(
            "\nInorder traversal of binary tree is ");
        tree.inorder();
 
        System.out.println(
            "\nPostorder traversal of binary tree is ");
        tree.postorder();

          
    }
       

    }

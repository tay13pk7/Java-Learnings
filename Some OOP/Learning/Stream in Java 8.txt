import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

public class Main 
{
    public static void main(String[] args) {
        

        List<Integer> nums = Arrays.asList(4,5,6,7,8,9);

        int sum = 0;
        for(int n : nums)
        {
          
           if(n%2==0)
           {
             n=n*2;
             sum = sum + n;
           }

        }

        System.out.println(sum);

        //Now all This operations can be done using stream
        // Stream is a interface which has methods in it 
         //The methods in it has functional interface so using lambda expression
        // Once a stream is used can't be use again 


         List<Integer> arr = Arrays.asList(4,5,6,7,8,9);


         int result = arr.stream().filter(n->n%2==0).map(n->n*2).reduce(0, (c,e)->c+e);

         System.out.println(result);

         // arr is used so can't use it again 
         // making another one


         List<Integer> arr1 = Arrays.asList(4,5,6,7,8,9);

         Stream<Integer> sortedresult = arr1.stream().filter(n-> n%2==0).sorted();

         sortedresult.forEach(n->System.out.println(n));


    }
}
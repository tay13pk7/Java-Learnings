import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.*;

public class Test1 {
    public static void main(String[] args) throws InterruptedException  {


        List<Integer> nums = new ArrayList<Integer>();

        nums.add(7);
        nums.add(3);
        nums.add(1);
        nums.add(4);

        Collections.sort(nums);

        for(int n:nums)
        {
            System.out.println(n);
        }

    }
}


// Now take a case where you have to sort the two digit number, sort using the last digit


import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.*;

public class Test1 {
    public static void main(String[] args) throws InterruptedException  {

        Comparator<Integer> comp = new Comparator<Integer>() {
            @Override
            public int compare(Integer i, Integer j) {            // this Comparator belongs to the Comparator interface , writing it as                    								 //functional interface

                if(i%10>j%10)
                    return 1;
                else
                    return -1;

            }
        };

        List<Integer> nums = new ArrayList<Integer>();

        nums.add(71);
        nums.add(36);
        nums.add(12);
        nums.add(43);

        Collections.sort(nums,comp);

        for(int n:nums)
        {
            System.out.println(n);
        }

    }
}
